<%_ service.enums.forEach((enumeration) => { _%>
  export enum <%= enumeration.nickname %> {
    <%_ enumeration.values.forEach((value) => { _%>
    <%= value.nickname %> = '<%= value.name %>',
    <%_ }) _%>
  }

<%_ }) _%>

<%_ service.models.forEach((model) => { _%>
  <%_ let modelName = camelCapitalize(model.shortName); _%>
  export interface <%= modelName %> {
    <%_ model.fields.forEach((field) => { _%>
      <%_ let fieldName = field.name; _%>
      <%_ let defaultValue = field.default; _%>
      <%_ let isOptional = !field.isRequired; _%>
      <%_ if (isOptional) { _%>
        <%_ fieldName = `${fieldName}?`; _%>
      <%_ } _%>
      <%= fieldName %>: <%- toJavaScriptTypeName(field.type) %>;
    <%_ }) _%>
  }
<%_ }) _%>

<%_ service.unions.forEach((union) => { _%>
  <%_ let types = union.types.map((type) => toJavaScriptTypeName(type.type)).join(' | ') _%>
  export type <%- toJavaScriptTypeName(union) %> = <%= types %>;
<%_ }) _%>

export as namespace <%- camelCapitalize(service.name) %>;
